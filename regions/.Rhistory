library(png)
library(grid)
library(dplyr)
library(data.table)
library(rstudioapi)
#### Regions ####
# set working directory to the file path
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
setwd("regions")
files <- list.files(pattern = ".png$")
all_flags <- sapply(files, readPNG, simplify = FALSE) %>% bind_rows()
all_flags_summed <- Reduce("+", all_flags)
avg <- (all_flags_summed) / length(files)
imgtest <- matrix(avg, nrow = 200)
dim(imgtest)
# remap the matrix
r <- imgtest[1:200, 1:300]
g <- imgtest[1:200, 301:600]
b <- imgtest[1:200, 601:900]
# create colors based on red, green and blue values
avg_col <- rgb(r, g, b)
dim(avg_col) <- dim(r)
grid.raster(avg_col, interpolate = FALSE) # output
#### Districts ####
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
setwd("districts")
files <- list.files(pattern = ".png$")
all_flags <- sapply(files, readPNG, simplify = FALSE) %>% bind_rows()
all_flags_summed <- Reduce("+", all_flags)
avg <- (all_flags_summed) / length(files)
imgtest <- matrix(avg, nrow = 200)
dim(imgtest)
r <- imgtest[1:200, 1:300]
g <- imgtest[1:200, 301:600]
b <- imgtest[1:200, 601:900]
avg_col <- rgb(r, g, b)
dim(avg_col) <- dim(r)
grid.raster(avg_col, interpolate = FALSE)
files <- list.files(pattern = ".png$")
list.files(pattern = ".png$")
sapply(files, readPNG, simplify = FALSE) %>% bind_rows()
sapply(files, readPNG, simplify = FALSE)
?readPNG
Reduce("+", all_flags)
head(all_flags)
typeof(all_flags)
?Reduce
all_flags$img1.png
all_flags$img2.png
files
files[]
files[2]
readPNG(files[2])
Reduce("+", readPNG(files[2]))
?Reduce
all_flags_summed
View(all_flags_summed)
library(png)
library(grid)
library(dplyr)
library(data.table)
library(rstudioapi)
#### Regions ####
# set working directory to the file path
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
setwd("regions")
# setwd("districts") # for the other example flag
files <- list.files(pattern = ".png$")
# apply the readPNG function to all the images
all_flags <- apply(files, readPNG, simplify = FALSE) %>% bind_rows()
all_flags_summed <- Reduce("+", all_flags)
avg <- (all_flags_summed) / length(files)
imgtest <- matrix(avg, nrow = 200)
dim(imgtest)
# remap the matrix
r <- imgtest[1:200, 1:300]
g <- imgtest[1:200, 301:600]
b <- imgtest[1:200, 601:900]
# create colors based on red, green and blue values
avg_col <- rgb(r, g, b)
dim(avg_col) <- dim(r)
grid.raster(avg_col, interpolate = FALSE) # output
library(png)
library(grid)
library(dplyr)
library(data.table)
library(rstudioapi)
#### Regions ####
# set working directory to the file path
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
setwd("regions")
# setwd("districts") # for the other example flag
files <- list.files(pattern = ".png$")
# apply the readPNG function to all the images
all_flags <- sapply(files, readPNG, simplify = FALSE) %>% bind_rows()
all_flags_summed <- Reduce("+", all_flags)
avg <- (all_flags_summed) / length(files)
imgtest <- matrix(avg, nrow = 200)
dim(imgtest)
# remap the matrix
r <- imgtest[1:200, 1:300]
g <- imgtest[1:200, 301:600]
b <- imgtest[1:200, 601:900]
# create colors based on red, green and blue values
avg_col <- rgb(r, g, b)
dim(avg_col) <- dim(r)
grid.raster(avg_col, interpolate = FALSE) # output
?readPNG
library(png)
library(grid)
library(dplyr)
library(data.table)
library(rstudioapi)
#### Regions ####
# set working directory to the file path
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# setwd("regions")
setwd("districts") # for the other example flag
files <- list.files(pattern = ".png$")
# apply the readPNG function to all the images
all_flags <- sapply(files, readPNG, simplify = FALSE) %>% bind_rows()
all_flags_summed <- Reduce("+", all_flags)
avg <- (all_flags_summed) / length(files)
imgtest <- matrix(avg, nrow = 200)
dim(imgtest)
# remap the matrix
r <- imgtest[1:200, 1:300]
g <- imgtest[1:200, 301:600]
b <- imgtest[1:200, 601:900]
# create colors based on red, green and blue values
avg_col <- rgb(r, g, b)
dim(avg_col) <- dim(r)
grid.raster(avg_col, interpolate = FALSE) # output
readPNG(files[2])
View(readPNG(files[2]))
View(as.data.frame(readPNG(files[2])))
View(as.data.frame(readPNG(files[5])))
View(as.data.frame(colSums(readPNG(files[5]))))
library(png)
library(grid)
library(dplyr)
library(data.table)
library(rstudioapi)
#### Regions ####
# set working directory to the file path
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
setwd("regions")
# setwd("districts") # for the other example flag
files <- list.files(pattern = ".png$")
# apply the readPNG function to all the images
all_flags <- sapply(files, readPNG, simplify = FALSE) %>% bind_rows()
all_flags_summed <- Reduce("+", all_flags)
avg <- (all_flags_summed) / length(files)
imgmatrix <- matrix(avg, nrow = 200)
dim(imgmatrix)
# remap the matrix
r <- imgmatrix[1:200, 1:300]
g <- imgmatrix[1:200, 301:600]
b <- imgmatrix[1:200, 601:900]
# create colors based on red, green and blue values
avg_col <- rgb(r, g, b)
dim(avg_col) <- dim(r)
grid.raster(avg_col, interpolate = FALSE) # output
head(all_flags_summed)
avg
